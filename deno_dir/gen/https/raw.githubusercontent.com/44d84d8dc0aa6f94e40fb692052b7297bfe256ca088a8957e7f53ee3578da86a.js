import { getSourceItemUniqueKey } from "./get-source-items-from-result.ts";
import { isObject } from "./utils/object.ts";
export function markSourceItems(ctx) {
    if (Array.isArray(ctx.public.items)) {
        const sourceOptions = ctx.sourcesOptions[ctx.public.sourceIndex];
        ctx.public.items = ctx.public.items.map((item) => {
            const key = getSourceItemUniqueKey(item, ctx.public.sourceIndex, sourceOptions);
            if (isObject(item)) {
                Object.defineProperty(item, "@denoflowKey", {
                    value: key,
                    enumerable: false,
                    writable: false,
                });
                Object.defineProperty(item, "@denoflowSourceIndex", {
                    value: ctx.public.sourceIndex,
                    enumerable: false,
                    writable: false,
                });
            }
            return item;
        });
        ctx.public.result = ctx.public.items;
    }
    return ctx;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFyay1zb3VyY2UtaXRlbXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtYXJrLXNvdXJjZS1pdGVtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDN0MsTUFBTSxVQUFVLGVBQWUsQ0FDN0IsR0FBWTtJQUVaLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ25DLE1BQU0sYUFBYSxHQUFHLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFZLENBQUMsQ0FBQztRQUNsRSxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUMvQyxNQUFNLEdBQUcsR0FBRyxzQkFBc0IsQ0FDaEMsSUFBSSxFQUNKLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBWSxFQUN2QixhQUFhLENBQ2QsQ0FBQztZQUNGLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUVsQixNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxjQUFjLEVBQUU7b0JBQzFDLEtBQUssRUFBRSxHQUFHO29CQUNWLFVBQVUsRUFBRSxLQUFLO29CQUNqQixRQUFRLEVBQUUsS0FBSztpQkFDaEIsQ0FBQyxDQUFDO2dCQUNILE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLHNCQUFzQixFQUFFO29CQUNsRCxLQUFLLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFZO29CQUM5QixVQUFVLEVBQUUsS0FBSztvQkFDakIsUUFBUSxFQUFFLEtBQUs7aUJBQ2hCLENBQUMsQ0FBQzthQUNKO1lBRUQsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDLENBQUMsQ0FBQztRQUNILEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0tBQ3RDO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGV4dCB9IGZyb20gXCIuL2ludGVybmFsLWludGVyZmFjZS50c1wiO1xuaW1wb3J0IHsgZ2V0U291cmNlSXRlbVVuaXF1ZUtleSB9IGZyb20gXCIuL2dldC1zb3VyY2UtaXRlbXMtZnJvbS1yZXN1bHQudHNcIjtcbmltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSBcIi4vdXRpbHMvb2JqZWN0LnRzXCI7XG5leHBvcnQgZnVuY3Rpb24gbWFya1NvdXJjZUl0ZW1zKFxuICBjdHg6IENvbnRleHQsXG4pOiBDb250ZXh0IHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY3R4LnB1YmxpYy5pdGVtcykpIHtcbiAgICBjb25zdCBzb3VyY2VPcHRpb25zID0gY3R4LnNvdXJjZXNPcHRpb25zW2N0eC5wdWJsaWMuc291cmNlSW5kZXghXTtcbiAgICBjdHgucHVibGljLml0ZW1zID0gY3R4LnB1YmxpYy5pdGVtcy5tYXAoKGl0ZW0pID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IGdldFNvdXJjZUl0ZW1VbmlxdWVLZXkoXG4gICAgICAgIGl0ZW0sXG4gICAgICAgIGN0eC5wdWJsaWMuc291cmNlSW5kZXghLFxuICAgICAgICBzb3VyY2VPcHRpb25zLFxuICAgICAgKTtcbiAgICAgIGlmIChpc09iamVjdChpdGVtKSkge1xuICAgICAgICAvLyBBZGQgc291cmNlIGluZGV4IGFuZCBpdGVtIGtleSB0byBpdGVtXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpdGVtLCBcIkBkZW5vZmxvd0tleVwiLCB7XG4gICAgICAgICAgdmFsdWU6IGtleSxcbiAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaXRlbSwgXCJAZGVub2Zsb3dTb3VyY2VJbmRleFwiLCB7XG4gICAgICAgICAgdmFsdWU6IGN0eC5wdWJsaWMuc291cmNlSW5kZXghLFxuICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH0pO1xuICAgIGN0eC5wdWJsaWMucmVzdWx0ID0gY3R4LnB1YmxpYy5pdGVtcztcbiAgfVxuICByZXR1cm4gY3R4O1xufVxuIl19