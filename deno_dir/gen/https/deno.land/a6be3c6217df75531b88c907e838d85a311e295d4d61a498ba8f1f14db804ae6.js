function extractPrettyTimezone(date) {
    const res = /\((.*)\)/.exec(date.toString());
    if (!res) throw new Error(`A weird error occurred whilst getting the timezone`);
    return res[1];
}
function negativeOrPositiveSign(num) {
    if (num >= 0) return '+' + num;
    return String(num);
}
const getYear = (date)=>date.getFullYear();
const getMonth = (date)=>[
        `Jan`,
        `Feb`,
        `Mar`,
        `Apr`,
        `May`,
        `Jun`,
        `Jul`,
        `Aug`,
        `Sep`,
        `Nov`,
        `Dec`
    ][date.getMonth()];
const getDate = (date)=>date.getDate();
const getWeekday = (date)=>[
        `Mon`,
        `Tue`,
        `Wed`,
        `Thu`,
        `Fri`,
        `Sat`,
        `Sun`
    ][date.getDay()];
const getAMP = (date)=>date.getHours() >= 12 ? 'PM' : 'AM';
const getHours = (date)=>date.getHours() > 12 ? date.getHours() - 12 : date.getHours();
const getMinutes = (date)=>date.getMinutes();
const getSeconds = (date)=>date.getSeconds();
const getMilliseconds = (date)=>date.getMilliseconds();
const getTimezone = (date)=>`${extractPrettyTimezone(date)} (GMT${negativeOrPositiveSign(date.getTimezoneOffset())}min)`;
export function getDateFormat(date, format) {
    switch(format){
        case 'year':
            return `${getYear(date)} ${getTimezone(date)}`;
        case 'month':
            return `${getMonth(date)} ${getYear(date)} ${getTimezone(date)}`;
        case 'day':
            return `${getWeekday(date)} ${getMonth(date)} ${getDate(date)} ${getYear(date)} ${getTimezone(date)}`;
        case 'hour':
            return `${getWeekday(date)} ${getMonth(date)} ${getDate(date)} ${getYear(date)} ${getHours(date)} ${getAMP(date)} ${getTimezone(date)}`;
        case 'minute':
            return `${getWeekday(date)} ${getMonth(date)} ${getDate(date)} ${getYear(date)} ${getHours(date)}:${getMinutes(date)} ${getAMP(date)} ${getTimezone(date)}`;
        case 'second':
            return `${getWeekday(date)} ${getMonth(date)} ${getDate(date)} ${getYear(date)} ${getHours(date)}:${getMinutes(date)}:${getSeconds(date)} ${getAMP(date)} ${getTimezone(date)}`;
        case 'log':
            return `${getWeekday(date)} ${getMonth(date)} ${getDate(date)} ${getYear(date)} ${getHours(date)}:${getMinutes(date)}:${getSeconds(date)}:${getMilliseconds(date)} ${getAMP(date)} ${getTimezone(date)}`;
        default:
            return ``;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvaGFja2xlQDEuMS4xL2xpYi9nZXQtZGF0ZS1mb3JtYXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBNYWtlRmlsZUxvZ2dlck9wdGlvbnMgfSBmcm9tICcuLi90b29scy50cydcblxuZnVuY3Rpb24gZXh0cmFjdFByZXR0eVRpbWV6b25lKGRhdGU6IERhdGUpIHtcblx0Y29uc3QgcmVzID0gL1xcKCguKilcXCkvLmV4ZWMoZGF0ZS50b1N0cmluZygpKVxuXHRpZiAoIXJlcykgdGhyb3cgbmV3IEVycm9yKGBBIHdlaXJkIGVycm9yIG9jY3VycmVkIHdoaWxzdCBnZXR0aW5nIHRoZSB0aW1lem9uZWApXG5cdHJldHVybiByZXNbMV1cbn1cblxuZnVuY3Rpb24gbmVnYXRpdmVPclBvc2l0aXZlU2lnbihudW06IG51bWJlcik6IHN0cmluZyB7XG5cdGlmIChudW0gPj0gMCkgcmV0dXJuICcrJyArIG51bVxuXHRyZXR1cm4gU3RyaW5nKG51bSlcbn1cblxuY29uc3QgZ2V0WWVhciA9IChkYXRlOiBEYXRlKSA9PiBkYXRlLmdldEZ1bGxZZWFyKClcbmNvbnN0IGdldE1vbnRoID0gKGRhdGU6IERhdGUpID0+IFtgSmFuYCwgYEZlYmAsIGBNYXJgLCBgQXByYCwgYE1heWAsIGBKdW5gLCBgSnVsYCwgYEF1Z2AsIGBTZXBgLCBgTm92YCwgYERlY2BdW2RhdGUuZ2V0TW9udGgoKV1cbmNvbnN0IGdldERhdGUgPSAoZGF0ZTogRGF0ZSkgPT4gZGF0ZS5nZXREYXRlKClcbmNvbnN0IGdldFdlZWtkYXkgPSAoZGF0ZTogRGF0ZSkgPT4gW2BNb25gLCBgVHVlYCwgYFdlZGAsIGBUaHVgLCBgRnJpYCwgYFNhdGAsIGBTdW5gXVtkYXRlLmdldERheSgpXVxuY29uc3QgZ2V0QU1QID0gKGRhdGU6IERhdGUpID0+IChkYXRlLmdldEhvdXJzKCkgPj0gMTIgPyAnUE0nIDogJ0FNJylcbmNvbnN0IGdldEhvdXJzID0gKGRhdGU6IERhdGUpID0+IChkYXRlLmdldEhvdXJzKCkgPiAxMiA/IGRhdGUuZ2V0SG91cnMoKSAtIDEyIDogZGF0ZS5nZXRIb3VycygpKVxuY29uc3QgZ2V0TWludXRlcyA9IChkYXRlOiBEYXRlKSA9PiBkYXRlLmdldE1pbnV0ZXMoKVxuY29uc3QgZ2V0U2Vjb25kcyA9IChkYXRlOiBEYXRlKSA9PiBkYXRlLmdldFNlY29uZHMoKVxuY29uc3QgZ2V0TWlsbGlzZWNvbmRzID0gKGRhdGU6IERhdGUpID0+IGRhdGUuZ2V0TWlsbGlzZWNvbmRzKClcbmNvbnN0IGdldFRpbWV6b25lID0gKGRhdGU6IERhdGUpID0+IGAke2V4dHJhY3RQcmV0dHlUaW1lem9uZShkYXRlKX0gKEdNVCR7bmVnYXRpdmVPclBvc2l0aXZlU2lnbihkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCkpfW1pbilgXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREYXRlRm9ybWF0KGRhdGU6IERhdGUsIGZvcm1hdDogTWFrZUZpbGVMb2dnZXJPcHRpb25zWyduZXdMb2dGaWxlRWFjaCddKTogc3RyaW5nIHtcblx0c3dpdGNoIChmb3JtYXQpIHtcblx0XHRjYXNlICd5ZWFyJzpcblx0XHRcdHJldHVybiBgJHtnZXRZZWFyKGRhdGUpfSAke2dldFRpbWV6b25lKGRhdGUpfWBcblx0XHRjYXNlICdtb250aCc6XG5cdFx0XHRyZXR1cm4gYCR7Z2V0TW9udGgoZGF0ZSl9ICR7Z2V0WWVhcihkYXRlKX0gJHtnZXRUaW1lem9uZShkYXRlKX1gXG5cdFx0Y2FzZSAnZGF5Jzpcblx0XHRcdHJldHVybiBgJHtnZXRXZWVrZGF5KGRhdGUpfSAke2dldE1vbnRoKGRhdGUpfSAke2dldERhdGUoZGF0ZSl9ICR7Z2V0WWVhcihkYXRlKX0gJHtnZXRUaW1lem9uZShkYXRlKX1gXG5cdFx0Y2FzZSAnaG91cic6XG5cdFx0XHRyZXR1cm4gYCR7Z2V0V2Vla2RheShkYXRlKX0gJHtnZXRNb250aChkYXRlKX0gJHtnZXREYXRlKGRhdGUpfSAke2dldFllYXIoZGF0ZSl9ICR7Z2V0SG91cnMoZGF0ZSl9ICR7Z2V0QU1QKGRhdGUpfSAke2dldFRpbWV6b25lKFxuXHRcdFx0XHRkYXRlXG5cdFx0XHQpfWBcblx0XHRjYXNlICdtaW51dGUnOlxuXHRcdFx0cmV0dXJuIGAke2dldFdlZWtkYXkoZGF0ZSl9ICR7Z2V0TW9udGgoZGF0ZSl9ICR7Z2V0RGF0ZShkYXRlKX0gJHtnZXRZZWFyKGRhdGUpfSAke2dldEhvdXJzKGRhdGUpfToke2dldE1pbnV0ZXMoZGF0ZSl9ICR7Z2V0QU1QKFxuXHRcdFx0XHRkYXRlXG5cdFx0XHQpfSAke2dldFRpbWV6b25lKGRhdGUpfWBcblx0XHRjYXNlICdzZWNvbmQnOlxuXHRcdFx0cmV0dXJuIGAke2dldFdlZWtkYXkoZGF0ZSl9ICR7Z2V0TW9udGgoZGF0ZSl9ICR7Z2V0RGF0ZShkYXRlKX0gJHtnZXRZZWFyKGRhdGUpfSAke2dldEhvdXJzKGRhdGUpfToke2dldE1pbnV0ZXMoXG5cdFx0XHRcdGRhdGVcblx0XHRcdCl9OiR7Z2V0U2Vjb25kcyhkYXRlKX0gJHtnZXRBTVAoZGF0ZSl9ICR7Z2V0VGltZXpvbmUoZGF0ZSl9YFxuXHRcdGNhc2UgJ2xvZyc6XG5cdFx0XHRyZXR1cm4gYCR7Z2V0V2Vla2RheShkYXRlKX0gJHtnZXRNb250aChkYXRlKX0gJHtnZXREYXRlKGRhdGUpfSAke2dldFllYXIoZGF0ZSl9ICR7Z2V0SG91cnMoZGF0ZSl9OiR7Z2V0TWludXRlcyhcblx0XHRcdFx0ZGF0ZVxuXHRcdFx0KX06JHtnZXRTZWNvbmRzKGRhdGUpfToke2dldE1pbGxpc2Vjb25kcyhkYXRlKX0gJHtnZXRBTVAoZGF0ZSl9ICR7Z2V0VGltZXpvbmUoZGF0ZSl9YFxuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gYGBcblx0fVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLFNBQVMsc0JBQXNCLElBQVUsRUFBRTtJQUMxQyxNQUFNLE1BQU0sV0FBVyxJQUFJLENBQUMsS0FBSyxRQUFRO0lBQ3pDLElBQUksQ0FBQyxLQUFLLE1BQU0sSUFB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