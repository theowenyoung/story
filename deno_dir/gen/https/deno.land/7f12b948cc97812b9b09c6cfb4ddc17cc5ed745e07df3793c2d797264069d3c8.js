// Copyright 2018-2020 the Deno authors. All rights reserved. MIT license.
import { bytesToUuid, createBuffer, stringToBytes, uuidToBytes } from "./_common.ts";
import { Sha1 } from "../hash/sha1.ts";
import { isString } from "../node/util.ts";
import { assert } from "../testing/asserts.ts";
const UUID_RE = /^[0-9a-f]{8}-[0-9a-f]{4}-[5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
export function validate(id) {
    return UUID_RE.test(id);
}
export function generate(options, buf, offset) {
    const i = buf && offset || 0;
    let { value , namespace  } = options;
    if (isString(value)) value = stringToBytes(value);
    if (isString(namespace)) namespace = uuidToBytes(namespace);
    assert(namespace.length === 16, "namespace must be uuid string or an Array of 16 byte values");
    const content = namespace.concat(value);
    const bytes = new Sha1().update(createBuffer(content)).digest();
    bytes[6] = bytes[6] & 0x0f | 0x50;
    bytes[8] = bytes[8] & 0x3f | 0x80;
    if (buf) {
        for(let idx = 0; idx < 16; ++idx){
            buf[i + idx] = bytes[idx];
        }
    }
    return buf || bytesToUuid(bytes);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjUxLjAvdXVpZC92NS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIwIHRoZSBEZW5vIGF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIE1JVCBsaWNlbnNlLlxuXG5pbXBvcnQge1xuICBieXRlc1RvVXVpZCxcbiAgY3JlYXRlQnVmZmVyLFxuICBzdHJpbmdUb0J5dGVzLFxuICB1dWlkVG9CeXRlcyxcbn0gZnJvbSBcIi4vX2NvbW1vbi50c1wiO1xuaW1wb3J0IHsgU2hhMSB9IGZyb20gXCIuLi9oYXNoL3NoYTEudHNcIjtcbmltcG9ydCB7IGlzU3RyaW5nIH0gZnJvbSBcIi4uL25vZGUvdXRpbC50c1wiO1xuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcIi4uL3Rlc3RpbmcvYXNzZXJ0cy50c1wiO1xuXG5jb25zdCBVVUlEX1JFID0gL15bMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bNV1bMC05YS1mXXszfS1bODlhYl1bMC05YS1mXXszfS1bMC05YS1mXXsxMn0kL2k7XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZShpZDogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiBVVUlEX1JFLnRlc3QoaWQpO1xufVxuXG5pbnRlcmZhY2UgVjVPcHRpb25zIHtcbiAgdmFsdWU6IHN0cmluZyB8IG51bWJlcltdO1xuICBuYW1lc3BhY2U6IHN0cmluZyB8IG51bWJlcltdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGUoXG4gIG9wdGlvbnM6IFY1T3B0aW9ucyxcbiAgYnVmPzogbnVtYmVyW10sXG4gIG9mZnNldD86IG51bWJlclxuKTogc3RyaW5nIHwgbnVtYmVyW10ge1xuICBjb25zdCBpID0gKGJ1ZiAmJiBvZmZzZXQpIHx8IDA7XG5cbiAgbGV0IHsgdmFsdWUsIG5hbWVzcGFjZSB9ID0gb3B0aW9ucztcbiAgaWYgKGlzU3RyaW5nKHZhbHVlKSkgdmFsdWUgPSBzdHJpbmdUb0J5dGVzKHZhbHVlIGFzIHN0cmluZyk7XG4gIGlmIChpc1N0cmluZyhuYW1lc3BhY2UpKSBuYW1lc3BhY2UgPSB1dWlkVG9CeXRlcyhuYW1lc3BhY2UgYXMgc3RyaW5nKTtcbiAgYXNzZXJ0KFxuICAgIG5hbWVzcGFjZS5sZW5ndGggPT09IDE2LFxuICAgIFwibmFtZXNwYWNlIG11c3QgYmUgdXVpZCBzdHJpbmcgb3IgYW4gQXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXNcIlxuICApO1xuXG4gIGNvbnN0IGNvbnRlbnQgPSAobmFtZXNwYWNlIGFzIG51bWJlcltdKS5jb25jYXQodmFsdWUgYXMgbnVtYmVyW10pO1xuICBjb25zdCBieXRlcyA9IG5ldyBTaGExKCkudXBkYXRlKGNyZWF0ZUJ1ZmZlcihjb250ZW50KSkuZGlnZXN0KCk7XG5cbiAgYnl0ZXNbNl0gPSAoYnl0ZXNbNl0gJiAweDBmKSB8IDB4NTA7XG4gIGJ5dGVzWzhdID0gKGJ5dGVzWzhdICYgMHgzZikgfCAweDgwO1xuXG4gIGlmIChidWYpIHtcbiAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCAxNjsgKytpZHgpIHtcbiAgICAgIGJ1ZltpICsgaWR4XSA9IGJ5dGVzW2lkeF07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJ1ZiB8fCBieXRlc1RvVXVpZChieXRlcyk7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEVBQTBFO0FBRTFFLFNBQ0UsV0FBVyxFQUNYLFlBQVksRUFDWixhQUFhLEVBQ2IsV0FBVyxRQUNOLGNBQWMsQ0FBQztBQUN0QixTQUFTLElBQUksUUFBUSxpQkFBaUIsQ0FBQztBQUN2QyxTQUFTLFFBQVEsUUFBUSxpQkFBaUIsQ0FBQztBQUMzQyxTQUFTLE1BQU0sUUFBUSx1QkFBdUIsQ0FBQztBQUUvQyxNQUFNLE9BQU8sNkVBQTZFLEFBQUM7QUFFM0YsT0FBTyxTQUFTLFFBQVEsQ0FBQyxFQUFVLEVBQVc7SUFDNUMsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0NBQ3pCO0FBT0QsT0FBTyxTQUFTLFFBQVEsQ0FDdEIsT0FBa0IsRUFDbEIsR0FBYyxFQUNkLE1BQWUsRUFDSTtJQUNuQixNQUFNLENBQUMsR0FBRyxBQUFDLEdBQUcsSUFBSSxNQUFNLElBQUssQ0FBQyxBQUFDO0lBRS9CLElBQUksRUFBRSxLQUFLLENBQUEsRUFBRSxTQUFTLENBQUEsRUFBRSxHQUFHLE9BQU8sQUFBQztJQUNuQyxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBVyxDQUFDO0lBQzVELElBQUksUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFLFNBQVMsR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFXLENBQUM7SUFDdEUsTUFBTSxDQUNKLFNBQVMsQ0FBQyxNQUFNLEtBQUssRUFBRSxFQUN2Qiw2REFBNkQsQ0FDOUQsQ0FBQztJQUVGLE1BQU0sT0FBTyxHQUFHLEFBQUMsU0FBUyxDQUFjLE1BQU0sQ0FBQyxLQUFLLENBQWEsQUFBQztJQUNsRSxNQUFNLEtBQUssR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQUFBQztJQUVoRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQUFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFJLElBQUksQ0FBQztJQUNwQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQUFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFJLElBQUksQ0FBQztJQUVwQyxJQUFJLEdBQUcsRUFBRTtRQUNQLElBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUU7WUFDakMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDM0I7S0FDRjtJQUVELE9BQU8sR0FBRyxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztDQUNsQyJ9