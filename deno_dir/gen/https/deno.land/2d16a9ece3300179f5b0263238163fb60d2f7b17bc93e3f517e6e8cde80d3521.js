export function isArray(value) {
    return Array.isArray(value);
}
export function isBoolean(value) {
    return typeof value === "boolean" || value instanceof Boolean;
}
export function isNull(value) {
    return value === null;
}
export function isNullOrUndefined(value) {
    return value === null || value === undefined;
}
export function isNumber(value) {
    return typeof value === "number" || value instanceof Number;
}
export function isString(value) {
    return typeof value === "string" || value instanceof String;
}
export function isSymbol(value) {
    return typeof value === "symbol";
}
export function isUndefined(value) {
    return value === undefined;
}
export function isObject(value) {
    return value !== null && typeof value === "object";
}
export function isError(e) {
    return e instanceof Error;
}
export function isFunction(value) {
    return typeof value === "function";
}
export function isRegExp(value) {
    return value instanceof RegExp;
}
export function isPrimitive(value) {
    return value === null || typeof value !== "object" && typeof value !== "function";
}
export function validateIntegerRange(value, name, min = -2147483648, max = 2147483647) {
    // The defaults for min and max correspond to the limits of 32-bit integers.
    if (!Number.isInteger(value)) {
        throw new Error(`${name} must be 'an integer' but was ${value}`);
    }
    if (value < min || value > max) {
        throw new Error(`${name} must be >= ${min} && <= ${max}.  Value was ${value}`);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjUxLjAvbm9kZS91dGlsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0FycmF5KHZhbHVlOiB1bmtub3duKTogYm9vbGVhbiB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQm9vbGVhbih2YWx1ZTogdW5rbm93bik6IGJvb2xlYW4ge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcImJvb2xlYW5cIiB8fCB2YWx1ZSBpbnN0YW5jZW9mIEJvb2xlYW47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc051bGwodmFsdWU6IHVua25vd24pOiBib29sZWFuIHtcbiAgcmV0dXJuIHZhbHVlID09PSBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQodmFsdWU6IHVua25vd24pOiBib29sZWFuIHtcbiAgcmV0dXJuIHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc051bWJlcih2YWx1ZTogdW5rbm93bik6IGJvb2xlYW4ge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiIHx8IHZhbHVlIGluc3RhbmNlb2YgTnVtYmVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTdHJpbmcodmFsdWU6IHVua25vd24pOiBib29sZWFuIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiB8fCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3ltYm9sKHZhbHVlOiB1bmtub3duKTogYm9vbGVhbiB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwic3ltYm9sXCI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWx1ZTogdW5rbm93bik6IGJvb2xlYW4ge1xuICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlOiB1bmtub3duKTogYm9vbGVhbiB7XG4gIHJldHVybiB2YWx1ZSAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0Vycm9yKGU6IHVua25vd24pOiBib29sZWFuIHtcbiAgcmV0dXJuIGUgaW5zdGFuY2VvZiBFcnJvcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWU6IHVua25vd24pOiBib29sZWFuIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNSZWdFeHAodmFsdWU6IHVua25vd24pOiBib29sZWFuIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUmVnRXhwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNQcmltaXRpdmUodmFsdWU6IHVua25vd24pOiBib29sZWFuIHtcbiAgcmV0dXJuIChcbiAgICB2YWx1ZSA9PT0gbnVsbCB8fCAodHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKVxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVJbnRlZ2VyUmFuZ2UoXG4gIHZhbHVlOiBudW1iZXIsXG4gIG5hbWU6IHN0cmluZyxcbiAgbWluID0gLTIxNDc0ODM2NDgsXG4gIG1heCA9IDIxNDc0ODM2NDdcbik6IHZvaWQge1xuICAvLyBUaGUgZGVmYXVsdHMgZm9yIG1pbiBhbmQgbWF4IGNvcnJlc3BvbmQgdG8gdGhlIGxpbWl0cyBvZiAzMi1iaXQgaW50ZWdlcnMuXG4gIGlmICghTnVtYmVyLmlzSW50ZWdlcih2YWx1ZSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bmFtZX0gbXVzdCBiZSAnYW4gaW50ZWdlcicgYnV0IHdhcyAke3ZhbHVlfWApO1xuICB9XG4gIGlmICh2YWx1ZSA8IG1pbiB8fCB2YWx1ZSA+IG1heCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGAke25hbWV9IG11c3QgYmUgPj0gJHttaW59ICYmIDw9ICR7bWF4fS4gIFZhbHVlIHdhcyAke3ZhbHVlfWBcbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxTQUFTLFFBQVEsS0FBYyxFQUFXO0lBQy9DLE9BQU8sTUFBTSxPQUFPLENBQUM7QUFDdkIsQ0FBQztBQUVELE9BQU8sU0FBUyxVQUFVLEtBQWMsRUFBVztJQUNqRCxPQUFPLE9BQU8sVUFBVSxhQUFhLGlCQUFpQjtBQUN4RCxDQUFDO0FBRUQsT0FBTyxTQUFTLE9BQU8sS0FBYyxFQUFXO0lBQzlDLE9BQU8sVUFBVSxJQUFJO0FBQ3ZCLENBQUM7QUFFRCxPQUFPLFNBQVMsa0JBQWtCLEtBQWMsRUFBVztJQUN6RCxPQUFPLFVBQVUsSUFBSSxJQUFJLFVBQVU7QUFDckMsQ0FBQztBQUVELE9BQU8sU0FBUyxTQUFTLEtBQWMsRUFBVztJQUNoRCxPQUFPLE9BQU8sVUFBVSxZQUFZLGlCQUFpQjtBQUN2RCxDQUFDO0FBRUQsT0FBTyxTQUFTLFNBQVMsS0FBYyxFQUFXO0lBQ2hELE9BQU8sT0FBTyxVQUFVLFlBQVksaUJBQWlCO0FBQ3ZELENBQUM7QUFFRCxPQUFPLFNBQVMsU0FBUyxLQUFjLEVBQVc7SUFDaEQsT0FBTyxPQUFPLFVBQVU7QUFDMUIsQ0FBQztBQUVELE9BQU8sU0FBUyxZQUFZLEtBQWMsRUFBVztJQUNuRCxPQUFPLFVBQVU7QUFDbkIsQ0FBQztBQUVELE9BQU8sU0FBUyxTQUFTLEtBQWMsRUFBVztJQUNoRCxPQUFPLFVBQVUsSUFBSSxJQUFJLE9BQU8sVUFBVTtBQUM1QyxDQUFDO0FBRUQsT0FBTyxTQUFTLFFBQVEsQ0FBVSxFQUFXO0lBQzNDLE9BQU8sYUFBYTtBQUN0QixDQUFDO0FBRUQsT0FBTyxTQUFTLFdBQVcsS0FBYyxFQUFXO0lBQ2xELE9BQU8sT0FBTyxVQUFVO0FBQzFCLENBQUM7QUFFRCxPQUFPLFNBQVMsU0FBUyxLQUFjLEVBQVc7SUFDaEQsT0FBTyxpQkFBaUI7QUFDMUIsQ0FBQztBQUVELE9BQU8sU0FBUyxZQUFZLEtBQWMsRUFBVztJQUNuRCxPQUNFLFVBQVUsSUFBSSxJQUFLLE9BQU8sVUFBVSxZQUFZLE9BQU8sVUFBVTtBQUVyRSxDQUFDO0FBRUQsT0FBTyxTQUFTLHFCQUNkLEtBQWEsRUFDYixJQUFZLEVBQ1osTUFBTSxDQUFDLFVBQVUsRUFDakIsTUFBTSxVQUFVLEVBQ1Y7SUFDTiw0RUFBNEU7SUFDNUUsSUFBSSxDQUFDLE9BQU8sU0FBUyxDQUFDLFFBQVE7UUFDNUIsTUFBTSxJQUFJLE1BQU0sQ0FBQyxFQUFFLEtBQUssOEJBQThCLEVBQUUsTUFBTSxDQUFDLEVBQUU7SUFDbkUsQ0FBQztJQUNELElBQUksUUFBUSxPQUFPLFFBQVEsS0FBSztRQUM5QixNQUFNLElBQUksTUFDUixDQUFDLEVBQUUsS0FBSyxZQUFZLEVBQUUsSUFBSSxPQUFPLEVBQUUsSUFBSSxhQUFhLEVBQUUsTUFBTSxDQUFDLEVBQzdEO0lBQ0osQ0FBQztBQUNILENBQUMifQ==